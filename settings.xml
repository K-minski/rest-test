<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="95650796-72ed-4cb2-bcc9-0a9387be063d" created="3.48.0" activeEnvironment="Online" encryptionMode="Not encrypted" name="httpbin" projectVersion="" updated="3.56.0" resourceRoot="" compositeProjectFormat="1.3">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Settings File Password" value=""/>
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="Test Suite Codes Run"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="&lt;all>"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\ReadyAPI-3.49.0\bin"/>
  <con:entry key="Environment" value="No Environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
    <con:setting id="95650796-72ed-4cb2-bcc9-0a9387be063dfileName">REST-Coverage</con:setting>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">true</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="GeneratableAllureReport@Folder">C:\Example\Allure\</con:setting>
  </con:settings>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>env</con:name>
    </con:property>
    <con:property>
      <con:name>value</con:name>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="fba391a6-6eae-4469-8e38-5437b8972d02" name="Local Virt" index="1">
    <con:service type="REST" name="http://httpbin.org">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">http://192.168.0.100:8080</con:endpoint>
    </con:service>
    <con:property>
      <con:name>env</con:name>
      <con:value>Online</con:value>
    </con:property>
    <con:property>
      <con:name>value</con:name>
      <con:value/>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="3ea0a611-0619-46d3-9d87-63f96dfe4ef5" name="Online" index="0">
    <con:service type="REST" name="http://httpbin.org">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">https://httpbin.org</con:endpoint>
    </con:service>
    <con:property>
      <con:name>env</con:name>
      <con:value>Online</con:value>
    </con:property>
    <con:property>
      <con:name>value</con:name>
      <con:value>JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGFnZXMgMiAwIFIvTGFuZyhkZS1ERSkgPj4NCmVuZG9iag0KMiAwIG9iag0KPDwvVHlwZS9QYWdlcy9Db3VudCAxL0tpZHNbIDMgMCBSXSA+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PC9UeXBlL1BhZ2UvUGFyZW50IDIgMCBSL1Jlc291cmNlczw8L0ZvbnQ8PC9GMSA1IDAgUj4+L0V4dEdTdGF0ZTw8L0dTNyA3IDAgUi9HUzggOCAwIFI+Pi9Qcm9jU2V0Wy9QREYvVGV4dC9JbWFnZUIvSW1hZ2VDL0ltYWdlSV0gPj4vTWVkaWFCb3hbIDAgMCA1OTUuMiA4NDEuOTJdIC9Db250ZW50cyA0IDAgUi9Hcm91cDw8L1R5cGUvR3JvdXAvUy9UcmFuc3BhcmVuY3kvQ1MvRGV2aWNlUkdCPj4vVGFicy9TPj4NCmVuZG9iag0KNCAwIG9iag0KPDwvRmlsdGVyL0ZsYXRlRGVjb2RlL0xlbmd0aCAxNDI+Pg0Kc3RyZWFtDQp4nKWOsQrCQBBE+4X9hykTwXXvzCV7rWgCVooHFpJSUylE/x88Q5rUTjcwvHkjk4r+YlZHKEIM4mGVk+jxvjNdV3gx7RLTpnVwTrRCejC5PFY4NCrmKzTBZGtIz7zrLg2GTyZjmJrNrWO6FadyXRf7MhRt2SMdmQ4ZfWYa/zaJXqIuTCaB+RfLuy9DfS7nDQplbmRzdHJlYW0NCmVuZG9iag0KNSAwIG9iag0KPDwvVHlwZS9Gb250L1N1YnR5cGUvVHJ1ZVR5cGUvTmFtZS9GMS9CYXNlRm9udC9BcmlhbE1UL0VuY29kaW5nL1dpbkFuc2lFbmNvZGluZy9Gb250RGVzY3JpcHRvciA2IDAgUi9GaXJzdENoYXIgMzIvTGFzdENoYXIgODAvV2lkdGhzIDEwIDAgUj4+DQplbmRvYmoNCjYgMCBvYmoNCjw8L1R5cGUvRm9udERlc2NyaXB0b3IvRm9udE5hbWUvQXJpYWxNVC9GbGFncyAzMi9JdGFsaWNBbmdsZSAwL0FzY2VudCA5MDUvRGVzY2VudCAtMjEwL0NhcEhlaWdodCA3MjgvQXZnV2lkdGggNDQxL01heFdpZHRoIDI2NjUvRm9udFdlaWdodCA0MDAvWEhlaWdodCAyNTAvTGVhZGluZyAzMy9TdGVtViA0NC9Gb250QkJveFsgLTY2NSAtMjEwIDIwMDAgNzI4XSA+Pg0KZW5kb2JqDQo3IDAgb2JqDQo8PC9UeXBlL0V4dEdTdGF0ZS9CTS9Ob3JtYWwvY2EgMT4+DQplbmRvYmoNCjggMCBvYmoNCjw8L1R5cGUvRXh0R1N0YXRlL0JNL05vcm1hbC9DQSAxPj4NCmVuZG9iag0KOSAwIG9iag0KPDwvQ3JlYXRpb25EYXRlKEQ6MjAyMTA1MTkxNDU0MzErMDInMDAnKSAvTW9kRGF0ZShEOjIwMjEwNTE5MTQ1NDMxKzAyJzAwJykgPj4NCmVuZG9iag0KMTAgMCBvYmoNClsgMjc4IDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCAwIDAgMCA3MjIgMCA2MTEgMCAwIDAgMCAwIDAgMCAwIDAgNjY3XSANCmVuZG9iag0KMTEgMCBvYmoNCjw8L1R5cGUvWFJlZi9TaXplIDExL1dbIDEgNCAyXSAvUm9vdCAxIDAgUi9JbmZvIDkgMCBSL0lEWzw4OTdEOEFBMzRFM0RBMTQxOTU2RUFFRkM4NDQyNDA5OT48ODk3RDhBQTM0RTNEQTE0MTk1NkVBRUZDODQ0MjQwOTk+XSAvRmlsdGVyL0ZsYXRlRGVjb2RlL0xlbmd0aCA0OT4+DQpzdHJlYW0NCnicY2AAgv//GYGkIAMDiPKDUG1girEZTDFFQ6jfYIr5LphiEYJQ7hBqOQMDACEABrgNCmVuZHN0cmVhbQ0KZW5kb2JqDQp4cmVmDQowIDEyDQowMDAwMDAwMDAwIDY1NTM1IGYNCjAwMDAwMDAwMTcgMDAwMDAgbg0KMDAwMDAwMDA3OCAwMDAwMCBuDQowMDAwMDAwMTM0IDAwMDAwIG4NCjAwMDAwMDAzODcgMDAwMDAgbg0KMDAwMDAwMDYwMyAwMDAwMCBuDQowMDAwMDAwNzYzIDAwMDAwIG4NCjAwMDAwMDA5ODkgMDAwMDAgbg0KMDAwMDAwMTA0MiAwMDAwMCBuDQowMDAwMDAxMDk1IDAwMDAwIG4NCjAwMDAwMDExOTEgMDAwMDAgbg0KMDAwMDAwMTMyMCAwMDAwMCBuDQp0cmFpbGVyDQo8PC9TaXplIDEyL1Jvb3QgMSAwIFIvSW5mbyA5IDAgUi9JRFs8ODk3RDhBQTM0RTNEQTE0MTk1NkVBRUZDODQ0MjQwOTk+PDg5N0Q4QUEzNEUzREExNDE5NTZFQUVGQzg0NDI0MDk5Pl0gPj4NCnN0YXJ0eHJlZg0KMTU2OA0KJSVFT0YNCnhyZWYNCjAgMA0KdHJhaWxlcg0KPDwvU2l6ZSAxMi9Sb290IDEgMCBSL0luZm8gOSAwIFIvSURbPDg5N0Q4QUEzNEUzREExNDE5NTZFQUVGQzg0NDI0MDk5Pjw4OTdEOEFBMzRFM0RBMTQxOTU2RUFFRkM4NDQyNDA5OT5dIC9QcmV2IDE1NjgvWFJlZlN0bSAxMzIwPj4NCnN0YXJ0eHJlZg0KMTk2Mw0KJSVFT0Y=</con:value>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="b8d32ce6-58c7-4107-86c6-3db8382043f8" name="Local Docker" index="2">
    <con:service type="REST" name="http://httpbin.org">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">http://localhost:80</con:endpoint>
    </con:service>
    <con:property>
      <con:name>env</con:name>
      <con:value>Local Docker</con:value>
    </con:property>
    <con:property>
      <con:name>value</con:name>
      <con:value/>
    </con:property>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:environmentSpec>
    <con:entry environmentId="fba391a6-6eae-4469-8e38-5437b8972d02">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="3ea0a611-0619-46d3-9d87-63f96dfe4ef5">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="b8d32ce6-58c7-4107-86c6-3db8382043f8">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
